on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master
  schedule:
    - cron: '23 14 * * 2'
  release:
name: build
jobs:
  generateMatrix:
    name: "Generate matrix from cabal"
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
      - name: Checkout base repo
        uses: actions/checkout@v2
      - name: Extract the tested GHC versions
        id: set-matrix
        run: |
          wget https://github.com/Kleidukos/get-tested/releases/download/v0.1.3.0/get-tested-0.1.3.0-linux-amd64 -O get-tested
          chmod +x get-tested
          ./get-tested --ubuntu rhine/rhine.cabal >> $GITHUB_OUTPUT
  build:
    runs-on: ubuntu-latest
    needs: generateMatrix
    strategy:
      matrix: ${{ fromJSON(needs.generateMatrix.outputs.matrix) }}
    name: Haskell GHC ${{ matrix.ghc }} cabal
    env:
      cabal_project_freeze: cabal.project.${{ matrix.ghc }}.freeze
    steps:
      - uses: actions/checkout@v2
      - uses: haskell/actions/setup@v1.2.9
        id: setup-haskell-build
        with:
          ghc-version: ${{ matrix.ghc }}
      - name: Install dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y libgl1-mesa-dev libglu1-mesa-dev freeglut3-dev
      - name: Cache Cabal build artifacts
        uses: actions/cache@v2
        with:
          path: |
            ${{ steps.setup-haskell-build.outputs.cabal-store }}
            dist-newstyle
          key: ${{ runner.os }}-cabal-${{ matrix.ghc }}-${{ hashFiles(env.cabal_project_freeze) }}
          restore-keys: |
            ${{ runner.os }}-cabal-${{ matrix.ghc }}
      - name: Cabal update
        run: cabal update
      - name: Cabal build dependencies
        run: |
          cabal build all  --enable-tests --only-dependencies --project-file=cabal.project.${{ matrix.ghc }}
      - name: Cabal build packages
        run: |
          cabal build all --enable-tests --project-file=cabal.project.${{ matrix.ghc }} -fdev
      - name: Cabal test
        run: |
          cabal test all --enable-tests --test-show-details=Always --project-file=cabal.project.${{ matrix.ghc }}
      - name: Cache stack build artifacts
        uses:  freckle/stack-cache-action@v1.0.1
        with:
          stack-yaml: stack.${{ matrix.ghc }}.yaml
      - name: Stack build and test
        run: |
          stack build --system-ghc --test --stack-yaml stack.${{ matrix.ghc }}.yaml
  build-flake:
    name: Nix Flake
    strategy:
      matrix:
        os:
          - ubuntu-20.04
          - macos-12
    runs-on: ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v2.4.0
      - uses: cachix/install-nix-action@v15
      - name: Build default package (rhine)
        run: nix build
      - name: Build default package (rhine-examples)
        run: nix build .#rhine-examples
      - name: Build default package (rhine-gloss)
        run: nix build .#rhine-gloss
      - name: Run tests
        run: nix develop -c cabal test all
      # nix flake check breaks on IFD in multi-platform flake https://github.com/NixOS/nix/issues/4265
      # - run: nix flake check
